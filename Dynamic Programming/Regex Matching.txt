//Regex Matching with support for '?' and '*' for Strings A and Strings B
// 1) ’?’ : Matches any single character.
// 2) ‘*’ : Matches any sequence of characters (including the empty sequence)


#include<bits/stdc++.h>
using namespace std;

string s1,s2;


int dp[10000][200];// to store value of each state

bool rec(int i,int j)
{
    bool ans=false;
    if(dp[i][j]!=-1)
    return dp[i][j];
    if(i==s1.length()&&j==s2.length()) //  edge case
    return true;
    if(i>s1.length()||j>=s2.length())
    return false;

   // Now visiting all possible states
    if(s2[j]=='?')
    {
        ans=ans|rec(i+1,j+1);
    }
    else if(s2[j]=='*')
    {
        ans=ans|rec(i+1,j);
        ans=ans|rec(i+1,j+1);
        ans=ans|rec(i,j+1);
    }
    else if(s1[i]==s2[j])
    {
        ans=ans|rec(i+1,j+1);

    }
    return dp[i][j]=ans;
}

int isMatch(string A,string B)
{
    s1=A;
    s2=B;
    memset(dp,-1,sizeof(dp));
    return rec(0,0);


}

int main()
{
    string a,b;
    cout << "Enter first String " <<  endl;
    cin >>  a;

    cout << "Enter second String " <<  endl;
    cin >>  b;

      if(isMatch(a,b))
        cout <<  "Both String Match" <<  endl;
      else
        cout << "Both String does not Match" <<  endl;


}
// Time Complexity : O(len(a)*len(b)) where len(x) is length of string x
// Space Complexity : O(len(a)*len(b)) where len(x) is length of string x

